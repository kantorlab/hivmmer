#!/usr/bin/env python
import argparse
import sys

from Bio import SeqIO
from operator import itemgetter

def parse_args():
  parser = argparse.ArgumentParser()
  parser.add_argument("-l",
                      default=75,
                      help="minimum read length to retain")
  parser.add_argument("-q",
                      default=25,
                      help="minimum mean quality score to retain")
  parser.add_argument("fastq",
                      nargs="+",
                      help="list of FASTQ input files to filter")
  return parser.parse_args()


def filter_reads(filename, l, q, keep):
  for seq in SeqIO.parse(filename, "fastq"):
    if len(seq) > l and sum(seq.letter_annotations["phred_quality"]) / len(seq) > q:
      seq = str(seq.seq)
      keep[seq] = keep.get(seq, 0) + 1

if __name__ == "__main__":

  args = parse_args()

  keep = {}

  for fastq in args.fastq:
    filter_reads(fastq, args.l, args.q, keep)

  for i, (seq, n) in enumerate(sorted(keep.items(), key=itemgetter(1), reverse=True)):
    print(">{}-{}".format(i, n))
    print(seq)

# vim: expandtab sw=2 ts=2
